name: Java Docker CI

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  build-and-run:
    runs-on: [self-hosted, Windows, X64]

    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Java 22
      - name: Set up Java 22
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '22'

      # Step 3: Build Spring Boot JAR
      - name: Build Spring Boot app
        run: mvn -B clean package

      # Step 4: Build Docker image locally
      - name: Build Docker image
        run: docker build --pull=false -t java-docker-ci:${{ github.ref_name }} .

      # Step 5: Stop old container if exists
      - name: Stop previous container
        shell: powershell
        run: |
          $container = docker ps -a -q -f name=java-docker-ci
          if ($container -ne $null -and $container -ne "") {
              docker stop java-docker-ci
              docker rm java-docker-ci
          } else {
              Write-Host "No existing container"
          }

      # Step 6: Run container with host port mapping
      - name: Run container
        shell: powershell
        run: |
          docker run -d --name java-docker-ci -p 9021:8080 java-docker-ci:${{ github.ref_name }}
